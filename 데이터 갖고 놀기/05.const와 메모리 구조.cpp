#include <iostream>

using namespace std;

/*
const를 선언하는 방법이다. 이를 수정할 순 없으며 초기값이 없어도 안된다.
컴파일 하기 나름이라서 readonly data 일 수 있고 아닐 수도 있다. (C++ 표준에 정의된 것이 없음)
*/
const int AIR = 0;
const int STUN = 1;
const int POLYMORPH = 2;
const int INVINCIBLE = 3;
/*
const로 선언된 변수들을 메모리에서 살펴보면
이는 "식은 XX 또는 함수 지정자여야 합니다." 라는 문구로 표기되고 있다.

사실상 이러한 상수로 선언한 변수들은 컴파일러가 메모리를 할당하지 않고
해당 변수가 사용된 지점에 값을 그대로 넣고 있다는 것을 확인할 수 있다.

그렇다는 것은 컴파일러 (VS) 마음이라는 것이다.
*/

unsigned char flag;

/* data 영역
.data (초기값이 있는 경우)
int a = 1;

.bss (초기값이 없는 경우)
int b;

.rodata (읽기전용 데이터)
const char* msg = "Hello World!";
*/
int a = 1;

int main() {

    // stack 영역에 해당하는 데이터
    int c = 3;

    /* 
    Ob0000 [무적][변이][스턴][공중부양]
    0000 0[무적]0[변이]0[스턴]0[공증부양] 

    지난 시간에는 각각의 수 마다 상태이상을 나타내는 수를 정의하고
    이를 1개 혹은 2개이상의 상태이상을 찾는 방법까지 알아보았다. 

    하지만 여기서는 한가지 문제가 존재한다. 

    모든 상태이상의 값을 변경해야할 때마다 매번 바꿔줘야 한다는 것이다.
    (쉽게 말해 하드코딩 상태라는 것이다.)

    혼자서 만드는 게임이라면 상관없지만 업계에서는 이렇게 하면 혼난다...

    ** 한번 정해지면 절대 바뀌지 않을 값들 
    constant의 약자인 const를 타입 앞에 선언한다. (변수를 상수화 하는 개념)
    const가 붙었다면 반드시 초기값을 지정해야 한다. (초기값이 없을 수 없다.)
    */

}